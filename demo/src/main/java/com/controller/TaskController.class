package com.controller;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import util.ConnectionFactory;
import java.util.List;
import java.sql.Date;
import model.Task;

public class TaskController {

    public void save(Task task) {
        String sql = "INSERT INTO  Tasks ("
        + "idProject"
        + ", name"
        + ", description"
        + ", isDone"
        + ", observationv"
        + ", createdAt"
        + ", updatedAt"
        + ", deadLine"
        + " ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";

        Connection conn = null;
        PreparedStatement statement = null;

        try {
            conn = ConnectionFactory.getConnection();
            statement = conn.prepareStatement(sql);
            statement.setInt(1, task.getIdProject);
            statement.setString(2, task.getName);
            statement.setString(3, task.getDescription);
            statement.setBoolean(4, task.getIsDone);
            statement.setString(5, task.getObservation);
            statement.setDate(6, new Date(task.getCreatedAt().getTime()));
            statement.setDate(7, new Date(task.getUpdatedAt().getTime()));
            statement.setDate(8, new Date(task.getDeadLine().getTime()));
            statement.execute();
        } catch (Exception e) {
            throw new RuntimeException("Erro ao criar a tarefa." + ex.getMessage(), ex);
        }finally{
            ConnectionFactory.closeConnection(conn, statement);
        }
    }

    public void update(Task task) {
        String sql = "UPDATE FROM Tasks WHERE id = ?";
    }

    public void deleteById(int taskId) {
        String sql = "DELETE FROM Tasks WHERE id = ?";

        Connection conn = null;
        PreparedStatement statement = null;

        try {
            conn = ConnectionFactory.getConnection();
            statement = conn.prepareStatement(sql);
            statement.setInt(1, taskId);
            statement.execute();
        } catch (Exception ex) {
            throw new RuntimeException("Erro ao deletar a tarefa." + ex.getMessage(), ex);
        }finally{
            ConnectionFactory.closeConnection(conn, statement);
        }
    }

    public List<Task> getAll(int idProject) {

    }
}
